apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: url-shortener
spec:
  selector:
    matchLabels:
      app: url-shortener
  replicas: 1
  template:
    metadata:
      labels:
        app: url-shortener
    spec:
      containers:
      - name: url-shortener
        image: url_shortener:0.0.1-beta3
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        env:
          - name: REDIS_HOST
            value: redis-service
          - name: SENTRY_DSN
            value: "http://6b4eb1caf5254f4fb9bd2812fb7f586f@bugsink-service:8000/1"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: custom_nginx:0.0.1-beta2
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bugsink
spec:
  selector:
    matchLabels:
      app: bugsink
  replicas: 1
  template:
    metadata:
      labels:
        app: bugsink
    spec:
      containers:
      - name: bugsink
        image: bugsink/bugsink:latest
        env:
          - name: SECRET_KEY
            value: QgNtI6CO8n2yp2lnhxoEaHSppicaAy6sfFM1Jn7cyEJfwQ1Elj # Must be in vault
          - name: CREATE_SUPERUSER
            value: admin:admin
          - name: PORT
            value: "8000"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: opensearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opensearch
  template:
    metadata:
      labels:
        app: opensearch
    spec:
      containers:
      - name: opensearch
        image: opensearchproject/opensearch:latest
        env:
        - name: discovery.type
          value: "single-node"
        - name: plugins.security.disabled
          value: "true"
        - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
          value: "6a!127af4f5ae6#2e7e1DD707ed58c857"
        ports:
        - containerPort: 9200
        volumeMounts:
        - name: opensearch-data
          mountPath: /usr/share/opensearch/data
      volumes:
      - name: opensearch-data
        emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: opensearch-dashboards
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opensearch-dashboards
  template:
    metadata:
      labels:
        app: opensearch-dashboards
    spec:
      containers:
      - name: opensearch-dashboards
        image: opensearchproject/opensearch-dashboards:latest
        env:
        - name: OPENSEARCH_HOSTS
          value: "http://opensearch-service:9200"
        - name: DISABLE_SECURITY_DASHBOARDS_PLUGIN
          value: "true"
        ports:
        - containerPort: 5601